=== tests/cases/conformance/externalModules/a.ts ===
export type T = string;
>T : Symbol(T, Decl(a.ts, 0, 0))

=== tests/cases/conformance/externalModules/b.ts ===
export * as A from './a';
>A : Symbol(A, Decl(b.ts, 0, 6))

=== tests/cases/conformance/externalModules/c.ts ===
export * as B from './b';
>B : Symbol(B, Decl(c.ts, 0, 6))

=== tests/cases/conformance/externalModules/d.ts ===
import * as C from './c';
>C : Symbol(C, Decl(d.ts, 0, 6))

const x: C.B.A.T = 'x';
>x : Symbol(x, Decl(d.ts, 1, 5))
>C : Symbol(C, Decl(d.ts, 0, 6))
>B : Symbol(C.B, Decl(c.ts, 0, 6))
>A : Symbol(C.B.A, Decl(b.ts, 0, 6))
>T : Symbol(C.B.A.T, Decl(a.ts, 0, 0))

const y: C.B.A.T = 3;
>y : Symbol(y, Decl(d.ts, 2, 5))
>C : Symbol(C, Decl(d.ts, 0, 6))
>B : Symbol(C.B, Decl(c.ts, 0, 6))
>A : Symbol(C.B.A, Decl(b.ts, 0, 6))
>T : Symbol(C.B.A.T, Decl(a.ts, 0, 0))

